{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Leek",
	"patterns": [
		{
			"include": "#function"
		},
		{
			"include": "#struct"
		},
		{
			"include": "#variable-declaration"
		},
		{
			"include": "#expressions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comment"
		}
	],
	"repository": {
		"types": {
			"patterns": [
				{
					"name": "entity.name.type.primitive.leek",
					"match": "\\b(String|i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|bool|usize|void)\\b"
				},
				{
					"match": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(::)",
					"captures": {
						"1": {
							"name": "entity.name.namespace.leek"
						},
						"2": {
							"name": "punctuation.double-colon.leek"
						}
					}
				},
				{
					"name": "entity.name.type.other.leek",
					"match": "\\b(?:\\w|_)(?:\\w|_|[0-9])*\\b"
				},
				{
					"name": "storage.type.array.leek",
					"begin": "(\\[)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.begin.square-bracket.leek"
						}
					},
					"end": "(\\])",
					"endCaptures": {
						"1": {
							"name": "punctuation.end.square-bracket.leek"
						}
					},
					"patterns": [
						{
							"include": "#types"
						}
					]
				}
			]
		},
		"argument-list": {
			"patterns": [
				{
					"name": "meta.argument.leek",
					"begin": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(:)\\s*(&)?\\s*(\\bmut\\b)?",
					"beginCaptures": {
						"1": {
							"name": "variable.parameter.leek"
						},
						"2": {
							"name": "punctuation.colon.leek"
						},
						"3": {
							"name": "keyword.reference.leek"
						},
						"4": {
							"name": "storage.modifier.mut.argument.leek"
						}
					},
					"end": "$|(,)|(?:(?=\\)))",
					"endCaptures": {
						"1": {
							"name": "punctuation.comma.leek"
						}
					},
					"patterns": [
						{
							"include": "#types"
						}
					]
				},
				{
					"name": "punctuation.comma.leek",
					"match": ","
				}
			]
		},
		"function": {
			"patterns": [
				{
					"name": "meta.function.declaration.leek",
					"match": "(\\b(?:fn))\\s+((?:\\w|_)(?:\\w|_|[0-9])*)",
					"captures": {
						"1": {
							"name": "keyword.function.leek"
						},
						"2": {
							"name": "entity.name.function"
						}
					}
				},
				{
					"name": "meta.function.argument-list.leek",
					"begin": "(?<=(?:fn).*?)(\\()",
					"beginCaptures": {
						"1": {
							"name": "punctuation.begin.bracket"
						}
					},
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.end.bracket"
						}
					},
					"patterns": [
						{
							"include": "#argument-list"
						}
					]
				},
				{
					"name": "meta.function.return-type.leek",
					"begin": "(?<=\\)\\s*)\\s*(\\-\\>)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.arrow.thin.leek"
						}
					},
					"end": "(?=(\\{|\n|fn|struct|perm|hold))",
					"endCaptures": {
						"1": {
							"name": "punctuation.begin.bracket"
						}
					},
					"patterns": [
						{
							"include": "#types"
						}
					]
				},
				{
					"name": "meta.function.body.leek",
					"begin": "(?<=(?:fn).*?)(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.begin.brace.leek"
						}
					},
					"end": "(\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.end.brace.leek"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
		},
		"struct": {
			"patterns": [
				{
					"name": "meta.type.struct.leek",
					"match": "\\b(struct)\\s+((?:\\w|_)(?:\\w|_|[0-9])*)",
					"captures": {
						"1": {
							"name": "keyword.type.struct.leek"
						},
						"2": {
							"name": "entity.name.type.struct.leek"
						}
					}
				},
				{
					"name": "meta.block.struct.leek",
					"begin": "(?<=(?:class|struct).*?)(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.begin.brace.leek"
						}
					},
					"end": "(\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.end.brace.leek"
						}
					},
					"patterns": [
						{
							"include": "#field"
						}
					]
				}
			]
		},
		"field": {
			"name": "meta.field.leek",
			"begin": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(:)",
			"beginCaptures": {
				"1": {
					"name": "variable.field.leek"
				},
				"2": {
					"name": "punctuation.colon.leek"
				}
			},
			"end": "$",
			"patterns": [
				{
					"include": "#types"
				}
			]
		},
		"variable-declaration": {
			"name": "meta.variable.definition.leek",
			"begin": "\\b(leak|perm|hold)\\s+((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(:)?",
			"beginCaptures": {
				"1": {
					"name": "keyword.leak.leek"
				},
				"2": {
					"name": "variable.other.leek"
				},
				"3": {
					"name": "punctuation.colon.leek"
				}
			},
			"end": "(=)",
			"endCaptures": {
				"1": {
					"name": "keyword.operator.assignment.leek"
				}
			},
			"patterns": [
				{
					"include": "#types"
				}
			]
		},
		"expressions": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#constant"
				},
				{
					"include": "#number"
				},
				{
					"include": "#control"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#call"
				},
				{
					"include": "#variable-declaration"
				},
				{
					"include": "#types"
				}
			]
		},
		"parameter-list": {
			"patterns": [
				{
					"name": "punctuation.comma.leek",
					"match": ","
				},
				{
					"include": "$self"
				}
			]
		},
		"call": {
			"name": "meta.call.leek",
			"begin": "\\b((?:\\w|_)(?:\\w|_|[0-9])*)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.call.leek"
				},
				"2": {
					"name": "punctuation.begin.bracket.leek"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "punctuation.end.bracket.leek"
				}
			},
			"patterns": [
				{
					"include": "#parameter-list"
				}
			]
		},
		"control": {
			"patterns": [
				{
					"name": "meta.control.leek",
					"match": "\\b(if|else|while|for|switch|unless)\\b(?=.*?(?:\\{|$))",
					"captures": {
						"1": {
							"name": "keyword.control.block.leek"
						}
					}
				},
				{
					"name": "keyword.control.leek",
					"match": "\\b(yeet|continue|break)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.logic.leek",
					"match": "\\b(\\!|\\&\\&|\\|\\|)\\b"
				},
				{
					"name": "keyword.operator.arithmetic.leek",
					"match": "(\\+|\\-|\\*|\\/|\\^|\\~|\\%)(=)?"
				},
				{
					"name": "keyword.operator.comparison.leek",
					"match": "(((=|>|<)(=)?)|!=)"
				}
			]
		},
		"constant": {
			"match": "\\b(?:true|false|null)\\b",
			"name": "constant.language.leek"
		},
		"number": {
			"patterns": [
				{
					"name": "constant.numeric.hex.leek",
					"match": "\\b(?<!\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(?:[ui](?:8|16|32|64|size))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				},
				{
					"name": "constant.numeric.binary.leek",
					"match": "\\b(?<!\\$)0(?:b|B)[01][01_]*(?:[ui](?:8|16|32|64|size))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				},
				{
					"name": "constant.numeric.octal.leek",
					"match": "\\b(?<!\\$)0(?:o|O)?[0-7][0-7_]*(?:[ui](?:8|16|32|64|size))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				},
				{
					"name": "constant.numeric.float.leek",
					"match": "\\b(?<!\\$|\\.)[0-9](?:[0-9]|_)*((?:[f](?:32|64)))\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				},
				{
					"name": "constant.numeric.float.leek",
					"match": "\\b(?<!\\$|\\.)[0-9](?:[0-9]|_)*(?:\\.)(?:[0-9]|_)*((?:[f](?:32|64)))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				},
				{
					"name": "constant.numeric.leek",
					"match": "\\b(?<!\\$)[0-9][0-9_]*(?:[ui](?:8|16|32|64|size))?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.leek"
						}
					}
				}
			],
			"name": "constant.numeric.leek"
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.leek",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.leek",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.leek",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.leek",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.leek"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.leek"
				}
			]
		}
	},
	"scopeName": "source.leek"
}
